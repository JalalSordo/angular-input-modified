!function(window,angular){"use strict";function inputModifiedDirective($animate){return{restrict:"E",require:["?ngModel","?^form"],link:function($scope,$element,attrs,controllers){var modelPath=attrs.ngModel,ngModel=controllers[0],ngForm=controllers[1];if("undefined"!=typeof ngModel){var toggleCssClasses=function(){$animate.addClass($element,ngModel.modified?modifiedClassName:notModifiedClassName),$animate.removeClass($element,ngModel.modified?notModifiedClassName:modifiedClassName)},onElementModified=function(e,i){if(ngForm){var o=ngForm.modifiedModels.indexOf(e),n=-1!==o;i&&!n?(ngForm.modifiedModels.push(e),ngForm.modifiedCount++):!i&&n&&(ngForm.modifiedModels.splice(o,1),ngForm.modifiedCount--),ngForm.modified=ngForm.modifiedCount>0}},onInputValueChanged=function(){if("undefined"==typeof ngModel.masterValue)ngModel.masterValue=ngModel.$modelValue,toggleCssClasses();else{var e=!valuesEqual(ngModel.$modelValue,ngModel.masterValue);ngModel.modified!==e&&(onElementModified(modelPath,e),ngModel.modified=e,toggleCssClasses())}},originalSetPristine=ngModel.$setPristine;ngModel.modified=!1,ngModel.masterValue=void 0,ngModel.$setPristine=function(){originalSetPristine.apply(this,arguments),ngModel.masterValue=ngModel.$modelValue,ngModel.modified=!1,onElementModified(modelPath,!1),toggleCssClasses()},ngModel.reset=function(){try{eval("$scope."+modelPath+" = ngModel.masterValue;")}catch(exception){}},ngForm&&!isFormInitialized(ngForm)&&initializeForm(ngForm),$scope.$watch(modelPath,onInputValueChanged)}}}}function isModelController(e){return"object"==typeof e&&"$modelValue"in e}function isModelControllerInitialized(e){return"modified"in e}function iterateFormElements(e,i){angular.forEach(e,function(e){isModelController(e)&&i(e)})}function initializeForm(e){e.modified=!1,e.modifiedCount=0,e.modifiedModels=[],e.reset=function(){iterateFormElements(e,function(e){isModelControllerInitialized(e)&&e.reset()})}}function isFormInitialized(e){return"undefined"!=typeof e.modified}function valuesEqual(e,i){return e=unifyValue(e),i=unifyValue(i),"object"==typeof e&&"object"==typeof i?e instanceof Date&&i instanceof Date?e.getTime()===i.getTime():e===i:e==i}function unifyValue(e){return void 0===e?null:""===e?null:e}var modifiedClassName="ng-modified",notModifiedClassName="ng-not-modified",directiveSpecification=["$animate",inputModifiedDirective];angular.module("ngInputModified",["ng"]).directive("input",directiveSpecification).directive("textarea",directiveSpecification).directive("select",directiveSpecification)}(window,angular);